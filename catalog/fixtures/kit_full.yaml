
### LOCATIONS

# Countries
- model: location.country
  pk: 1
  fields:
    label: France
- model: location.country
  pk: 2
  fields:
    label: Italy


# PostalAddress
- model: location.postaladdress
  pk: 1
  fields:
    number_in_street: 17
    street: Rue de la République
    postal_code: 84000
    city: Avignon
    country: 1
- model: location.postaladdress
  pk: 2
  fields:
    street: Avenue Pierre Semard
    postal_code: 84000
    city: Avignon
    country: 1
    is_public: true

# GPSAddress
- model: location.gpsaddress
  pk: 1
  fields:
    longitude: 1.1
    latitude: 1.2
- model: location.gpsaddress
  pk: 2
  fields:
    longitude: 2.1
    latitude: 2.2

# Locations
- model: location.location
  pk: 1
  fields:
    label: "Fontaine centre-ville"
    postal_address: 1
    gps_address: 1
- model: location.location
  pk: 2
  fields:
    label: "Snack l'Amigo"
    postal_address: 2
    gps_address: 2

# RoadbookAddress
- model: location.roadbookaddress
  pk: 1
  fields:
    location: 1
    from_description: "En venant de Marseille"

# RoadbookSteps
- model: location.roadbookstep
  pk: 1
  fields:
    rank: 0
    at_description: "A la sortie n°23 Avignon-Sud"
    direction_to_follow: "Sortir et suivre Avignon"
    roadbook: 1
- model: location.roadbookstep
  pk: 2
  fields:
    rank: 1
    at_description: "Au rond-point de la concession Renault"
    direction_to_follow: "Prendre à gauche (3ème sortie) puis suivre Quick"
    roadbook: 1
- model: location.roadbookstep
  pk: 3
  fields:
    rank: 2
    at_description: "Au rond-point du Quick"
    direction_to_follow: "Prendre à gauche (3ème sortie) puis contourner CapSud et son parking"
    roadbook: 1


### PEOPLE

# Users
- model: auth.user
  pk: 2
  fields:
    username: user1
    email: user1@domain.tld
    password: pbkdf2_sha256$24000$R4bmZcMDiBeP$4NWWUSuO9wjQingty70fgGeLjJwKGfoZadbU/Vs26Iw=
- model: auth.user
  pk: 3
  fields:
    username: user2
    email: user2@domain.tld
    password: pbkdf2_sha256$24000$R4bmZcMDiBeP$4NWWUSuO9wjQingty70fgGeLjJwKGfoZadbU/Vs26Iw=

# Capacities
- model: people.capacity
  pk: 1
  fields:
    label: Scénariste
- model: people.capacity
  pk: 2
  fields:
    label: Casseur d'histoire
- model: people.capacity
  pk: 3
  fields:
    label: Relecteur
- model: people.capacity
  pk: 4
  fields:
    label: Casteur

# Participants
- model: people.participant
  pk: 1
  fields:
    user: 2
    referer: 1
    pseudo: Contact1
- model: people.participant
  pk: 2
  fields:
    user: 3
    referer: 1
    pseudo: Contact2
- model: people.participant
  pk: 3
  fields:
    referer: 3
    pseudo: Contact3


### CATALOG

# Item categories
- model: catalog.itemcategory
  pk: 1
  fields:
    label: Costume

# Items
- model: catalog.item
  pk: 1
  fields:
    label: Costume batman
    owner: 2
    location: 1
    categories:
      - 1
- model: catalog.item
  pk: 2
  fields:
    label: Snack l'Amigo
    owner: 2
    location: 1
    categories:
      - 2

# ItemPictures
- model: catalog.itempicture
  pk: 1
  fields:
    item: 1
    label: Face
- model: catalog.itempicture
  pk: 2
  fields:
    item: 1
    label: Profil


### PROJECT

# Projects
- model: project.project
  pk: 1
  fields:
    label: Admin first movie
    referer: 1
- model: project.project
  pk: 2
  fields:
    label: Admin second movie
    referer: 1
- model: project.project
  pk: 3
  fields:
    label: A guy's movie
    referer: 2

# Phases
- model: project.phase
  pk: 1
  fields:
    label: Writing
    project: 1
    rank: 1
- model: project.phase
  pk: 2
  fields:
    label: Préparation
    project: 1
    rank: 2

# Tasks
- model: project.task
  pk: 1
  fields:
    label: Trouver un bon départ
    phase: 1
    referer: 1
    required_capacities:
      - 1
- model: project.task
  pk: 2
  fields:
    label: Trouver une bonne chute
    phase: 1
    referer: 1
    required_capacities:
      - 1
- model: project.task
  pk: 3
  fields:
    label: Design des personnages
    phase: 2
    referer: 1
    required_capacities:
      - 2
- model: project.task
  pk: 4
  fields:
    label: Casting des acteurs
    phase: 2
    referer: 1
    required_capacities:
      - 2
- model: project.task
  pk: 5
  fields:
    label: Répétitions préliminaires
    phase: 2
    referer: 1
    required_capacities:
      - 2

# TaskDependencies
- model: project.taskdependency
  pk: 1
  fields:
    concerned_task: 2
    depends_on: 1
- model: project.taskdependency
  pk: 2
  fields:
    concerned_task: 4
    depends_on: 3
- model: project.taskdependency
  pk: 3
  fields:
    concerned_task: 5
    depends_on: 3

# Participations
- model: project.participation
  pk: 1
  fields:
    task: 1
    capacity: 1
    participant: 1
    participant_validation: false
    referer_validation: false
